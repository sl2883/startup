{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n/**\n * Copyright (c) 2016-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport createAtomicRules from './createAtomicRules';\nimport hash from '../../vendor/hash';\nimport initialRules from './initialRules';\nimport WebStyleSheet from './WebStyleSheet';\nvar emptyObject = {};\nvar STYLE_ELEMENT_ID = 'react-native-stylesheet';\n\nvar createClassName = function createClassName(prop, value) {\n  var hashed = hash(prop + normalizeValue(value));\n  return process.env.NODE_ENV !== 'production' ? \"rn-\" + prop + \"-\" + hashed : \"rn-\" + hashed;\n};\n\nvar normalizeValue = function normalizeValue(value) {\n  return typeof value === 'object' ? JSON.stringify(value) : value;\n};\n\nvar StyleSheetManager = /*#__PURE__*/function () {\n  function StyleSheetManager() {\n    var _this = this;\n\n    this._cache = {\n      byClassName: {},\n      byProp: {}\n    };\n    this._sheet = new WebStyleSheet(STYLE_ELEMENT_ID);\n    initialRules.forEach(function (rule) {\n      _this._sheet.insertRuleOnce(rule);\n    });\n  }\n\n  var _proto = StyleSheetManager.prototype;\n\n  _proto.getClassName = function getClassName(prop, value) {\n    var val = normalizeValue(value);\n    var cache = this._cache.byProp;\n    return cache[prop] && cache[prop].hasOwnProperty(val) && cache[prop][val];\n  };\n\n  _proto.getDeclaration = function getDeclaration(className) {\n    var cache = this._cache.byClassName;\n    return cache[className] || emptyObject;\n  };\n\n  _proto.getStyleSheet = function getStyleSheet() {\n    var cssText = this._sheet.cssText;\n    return {\n      id: STYLE_ELEMENT_ID,\n      textContent: cssText\n    };\n  };\n\n  _proto.injectDeclaration = function injectDeclaration(prop, value) {\n    var _this2 = this;\n\n    var val = normalizeValue(value);\n    var className = this.getClassName(prop, val);\n\n    if (!className) {\n      className = createClassName(prop, val);\n\n      this._addToCache(className, prop, val);\n\n      var rules = createAtomicRules(\".\" + className, prop, value);\n      rules.forEach(function (rule) {\n        _this2._sheet.insertRuleOnce(rule);\n      });\n    }\n\n    return className;\n  };\n\n  _proto._addToCache = function _addToCache(className, prop, value) {\n    var cache = this._cache;\n\n    if (!cache.byProp[prop]) {\n      cache.byProp[prop] = {};\n    }\n\n    cache.byProp[prop][value] = className;\n    cache.byClassName[className] = {\n      prop: prop,\n      value: value\n    };\n  };\n\n  return StyleSheetManager;\n}();\n\nexport { StyleSheetManager as default };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(emptyObject, \"emptyObject\", \"/home/ec2-user/myApp/node_modules/react-native-web/dist/exports/StyleSheet/StyleSheetManager.js\");\n  reactHotLoader.register(STYLE_ELEMENT_ID, \"STYLE_ELEMENT_ID\", \"/home/ec2-user/myApp/node_modules/react-native-web/dist/exports/StyleSheet/StyleSheetManager.js\");\n  reactHotLoader.register(createClassName, \"createClassName\", \"/home/ec2-user/myApp/node_modules/react-native-web/dist/exports/StyleSheet/StyleSheetManager.js\");\n  reactHotLoader.register(normalizeValue, \"normalizeValue\", \"/home/ec2-user/myApp/node_modules/react-native-web/dist/exports/StyleSheet/StyleSheetManager.js\");\n  reactHotLoader.register(StyleSheetManager, \"StyleSheetManager\", \"/home/ec2-user/myApp/node_modules/react-native-web/dist/exports/StyleSheet/StyleSheetManager.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"module"}